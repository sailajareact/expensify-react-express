
babel customization/es6-cont-let-datatypes.js --out-file=public/scripts/app.js

babel customization/es6-cont-let-datatypes.js --out-file=public/scripts/app.js --watch

babel src/app.js --out-file=public/scripts/app.js

---> to add presets in package file 
yarn add babel-preset-env@1.5.2 babel-preset-react@6.24.1 babel
-->to run js file in browser
live-server file(which is related to html)


--> intital trnsroming of the file to react
>babel src/app.js --out-file=public/scripts/app.js --presets=env,react

-->removing global installed dependencies and adding into locally
if add to yarn try this: yarn global remove babel-cli live-server
or add to npm try this: npm uninstall -g babel-cli live-server

adding locally: yarn add live-server babel-cli@6.24.1

--> to run the scripts which r created as aliase of our commands to live-server and babel
yarn run serve(script name)

-->installing webpack tool locally
yarn add webpack@3.1.0


--> after installing webpack and creating the webpack.config.js file run these commands 
->to show up the application in browser
to build the application in webpack: yarn run build
to watch the build file for changes: yarn run build --watch
to deploy in in server: yarn run serve

-->install npm validator
yarn add validator@8.0.0

--> install react to the npm
yarn add react@15.6.1 react-dom@15.6.1

--> install babel core in the npm 
yarn add babel-core@6.25.0 babel-loader@7.1.1

-->install webpack devserver 
yarn add webpack-dev-server@2.5.1

-->install plugin to transform the class properties
yarn add babel-plugin-transform-class-properties@6.24.1

-->install and use third party libraries to function like date picker,
alert and choosing 
yarn add react-modal@2.2.2

-->install css and style to config webpack
yarn add style-loader@0.18.2 css-loader@0.28.4

-->install sass/sass loaders/libraries to webpack to convert scss to css and use them in js files
yarn add sass-loader@6.0.6 node-sass@4.5.3

--> install normalize css to reset code
yarn add normalize.css@7.0.0

yarn add react-router-dom@4.2.2

------------------------> Redux <---------------------------------
yarn add redux@3.7.2

----> for redux documentation follow these links---------
https://github.com/reactjs/redux
https://redux.js.org/basics/reducers

---> to create unique id install npm uuid
yarn add uuid@3.1.0

---> to use object spread operator install babel plug in
yarn add babel-plugin-transform-object-rest-spread@6.23.0

---------> react redux provider to to connect react component
to redux store<-----------------------------
yarn add react-redux@5.0.5

----> for the date picker--
https://github.com/airbnb/react-dates

http://airbnb.io/react-dates
yarn add moment@2.18.1 react-dates@12.7.0 react-addons-shallow-compare@15.6.0

--> install jest to test the application
yarn add jest@20.0.4
--to run this command
yarn run test --after creating test script in package,json

-->to run the render methods/dom use snap shot
yarn add react-test-renderer@15.6.1

----->enzyme test utility ------------
yarn add enzyme@3.0.0 enzyme-adapter-react-16@1.0.0 raf@3.3.2
yarn add enzyme-to-json@3.0.1


------>git repository------------------------
command from ur root folder i.e. from the expensify-enzyme-application
---to initialize i.e. creating .git at the end of application
git init
git status --will give the status of the project at certain point of time
git add ---will add to the repositry
git add .  ---will add all the files to the git repositry
git comit -m "intial comit" ---will comit to th repositry and wil track the files

-------->in git bash<--------
https://help.github.com/articles/connecting-to-github-with-ssh/
to check the existing ssh keys
ls -a ~/.ssh

to generate new keys
ssh-keygen -t rsa -b 4096 -C "your_email@example.com"

ensuring ssh-agent is running
eval $(ssh-agent -s)

add ssh private key to ssh-agent
ssh-add ~/.ssh/id_rsa

once add the ssh key to github , check the authontication
ssh -T git@github.com

to add remote git repository
git remote add origin git@github.com:sailajareact/expensify-react-express.git

git remote -->to check origin added or not
git remote -v --> to check the fetch and push urls

git push -u origin master --> to push local sys code to git repo for the "1st time"
git push --> to commit and push our new code to github

github with visual studio
https://www.infragistics.com/community/blogs/b/dhananjay_kumar/posts/step-by-step-working-with-github-repository-and-visual-studio-2015


--------------->webpack production---------
yarn run build:prod

----> to wrap up the styles files in styles folder
yarn add extract-text-webpack-plugin@3.0.0


-----------> express server <--------------------
yarn add express@4.15.4

----->to run the app on server 
node server/server.js

------>heroku is web deployment server to deploy app to web and it'll give
u the ready to use url of your app. once install the heroku cli check the version
heroku --version

---> to authonticate
heroku login

--for existing git repositories
heroku git:remote -a expensify-react-heroku

git push heroku master
heroku logs --to get the error log of heroku

delpoyed urls:
https://expensify-react-heroku.herokuapp.com/
https://react-expensify-server.herokuapp.com/

--------->to wrap up dependencies
yarn add chalk --dev

--->to run production dependencies
yarn install --production


---> numeral dep
yarn add numeral@2.0.6


----------------->firbase is nosql database<--------------------
yarn add firbase@4.2.0

------------->redux-thunk is a middleware to return func from action-------
yarn add redux-thunk@2.2.0
https://stackoverflow.com/questions/35411423/how-to-dispatch-a-redux-action-with-a-timeout/35415559#35415559

--->to create mock db for testing----
yarn add redux-mock-store@1.2.3